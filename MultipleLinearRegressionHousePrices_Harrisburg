# Install Packages & Load Libraries
install.packages("corrplot")
install.packages("ggplot2")
install.packages("sqldf")
install.packages("caret")
library(corrplot)
library(ggplot2)
library(sqldf)
library(caret)

# Read csv file into a Data Frame 
df <- read.csv("C:\\Users\\prasa\\Desktop\\Data\\zillow_data\\kc_house_data.csv",header = TRUE) 
str(df)
dim(df)
colnames(df)
head(df,2)

print(sqldf("select distinct bathrooms from df"))

# Check for missing values: There are no Missing Values
summary(df)  # Check for quartiles and missing values
missing <- is.na(df)
sum(missing)
colSums(missing)

# Drop "date house was sold" and "ID". We do not perform any anlaysis on time period
df[1:2] <- NULL 
str(df)

# Find correlation among all features and price
corr <- cor(df)

# Correlation Plot of Different Features and Price
par(mfrow = c(1,1))
corrplot(corr, type = "full", method = "circle", main = "")

# Print the Correlation co-efficients
corr <- (round(corr,digits = 2))
corr
install.packages("xlsx")
library(xlsx)
write.xlsx(corr, "C:\\Users\\prasa\\Desktop\\RCode\\corr.xlsx")


# Features/ predictors/independent regressors/explanatory variables that are highly correlated with response/dependent
# variable price

# Correlation between price and sqft living is highest 0.7
# Correlation between price and grade is  0.67
# Correlation between price and sqft_above is 0.61
# Correlation between price and sqft_living15 is 0.59
# Correlation between price and number of bathrooms is 0.53

# Evaluating multi collinearity between predictor variables/ features
# sqft_living is correlated with sqft_above 0.88
# sqft_living is correlated with sqft_living15 0.76
# sqft_living is correlated with grade 0.76
# sqft_living is correlated with bathrooms 0.75
# sqft_living is correlated with bedrooms 0.58

# Scatter plots of price~independent variables
par(mfrow = c(1,1))
for (i in c(2:19)){
  plot(df[,i],df$price,main=names(df[i]),ylab = names(df$price),xlab = names(df[i]),col = 'steelblue')
}


# Box Plot of Price~Categorical Variables
par(mfrow=c(1,1))
for (i in c(2,3,6,7,8,9,10,15)){
  boxplot(df[,1]~df[,i],ylab= names(df[1]),xlab = names(df[i]),col=c("orange","blue"))
}
     

# Interpreting The Box Plot
# Bedrooms: Median prices across bedrooms do not have a lot of variation. There are bedroom extremes I can see
# that there are house/houses with 11 and 33 bedrooms and have lower price than other bedroom houses which is weird
# Bathrooms: Median price increase as # bathrooms increase but there are categorical lows also
# Floors: Shows catrgorcial variation for median price
# Waterfrom: MEdian price is higher with a watefront
# view: The median price generally increases as the views increase
# There is some variability in price because of condition
# median price is increasing with grade
# some zip codes command higher prices


# Histogram and Probability Density Plots for bedroom variable
par(mfrow = c(1,2))
hist(df$bedrooms, breaks = 30, xlab = "", col = "steelblue",main = "Bedrooms")
plot(density(df$bedrooms),xlab = "",col= "steelblue", main = "Bedrooms")

# The box plot shows that bedrooms tend to have extreme values
# Checking Bedroom Extremes

print(subset(df,df$bedrooms>10))

# 2 houses have extreme values. One house has 11 bedrooms while the other house has 33 bedrooms. The price looks
# astonishingly low.The 33 bedrooms house has 1.75 bathrooms which does not make sense.There must be some data error. 
# What is the average price of a house having 3 bedrooms?

bedroom3 <- subset(df,df$bedrooms ==3)
print(tapply(bedroom3$sqft_living, bedroom3$bedrooms, mean))

# The mean sqft_living for a 3 bedroom house is 1805.837. Instead of removing the data point, am going to update
look.for <- c(33)
look.for
df[df$bedrooms %in% look.for,]
# The house which has 33 bedrooms has record number 15871

# Updating bedrooms of row 15871 to 3
df[15871,2] <- 3


# Bathrooms
par(mfrow = c(1,3))
hist(df$bathrooms, breaks = 20, xlab = "",col = "lightsteelblue", main = "Bathrooms")
plot(density(df$bathrooms), xlab="", col = "steelblue", main="Bathrooms")
scatter.smooth(df$bathrooms,df$price,col = "steelblue", xlab = "Bathrooms", ylab = "Price", main = "Bathrooms", lpars = list(col="red",lwd = 2))

# Referring to  correlation matrix,excel file corr.xlsx lets start choosing the variables that I will use for building the model
# Lets fit the full model

str(df)
# Lets convert bedrooms,bathrooms,floors,waterfront,view,condition,grade,zip code,lat,long into categorical/dummy variable


# converting to factors ( categorical data )
df$zipcode <- as.factor(df$zipcode)
df$grade <- as.factor(df$grade)
df$waterfront <- as.factor(df$waterfront)
df$floors <- as.factor(df$floors)
df$bedrooms <- as.factor(df$bedrooms)
df$lat <- as.factor(df$lat)
df$long <- as.factor(df$long)
df$bathrooms <- as.factor(df$bathrooms)
df$condition <- as.factor(df$condition)
df$view <- as.factor(df$view)

# Now Selecting 80% of data as sample from total 'n' rows of the data 
set.seed(1000)
sample <- sample.int(n=nrow(df), size = floor(0.80*nrow(df)), replace = F) # Sample without replacement

# Splitting train and test data
train <- df[sample, ]
test  <- df[-sample, ]

# Selecting a subset of predictor/independent variables based on 
# 1.Domain knowedge the team has and the EDA
# 2.Remove multicollinearity from the model

# 1.On looking at the data set we realize that some variables like lat,long are not very intuitive from customer perspective
# We don't require data at that micro level. So drop lat and long.  

#2.Is there any relation between sqft_living, sqft_basementand sqft_above? Yes, looks like there is. The relation is sqft_living = sqft_above + sqft_basement
# print(sqldf("select sqft_living,sqft_above,sqft_basement from df")) 
# Clearly there is multicollinearity at play among independent variables. Let us drop sqft_above and sqft_basement variables
# sqft_living15 is highly correlated with sqft_living; so drop sqft_living15 from model
# sqft_lot15 is highly correlated with sqft_lot so lets drop sqft_lot15 from model 


# Select below subset of regressors for building the model
#bedrooms
#bathrooms
#sqft_living
#sqft_lot
#floors
#waterfront
#view
#condition
#grade
#zipcode


# Creating linear model: Using only subet of regressors from above
str(df)
head(df,1)

mod1 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot + floors + waterfront + view + condition + grade + zipcode, data = train)
summary(mod1)
plot(mod1)


# The bedroom variable does not seem as significant a factor and we can remove it from the model ( p-value > alpha), so
# reject null hyptheisis that bedrooms co-efficient = 0; Remaining variables looks significant 

mod2 <- lm(price ~ bathrooms + sqft_living + sqft_lot + floors + waterfront + view + condition + grade + zipcode, data = train)
summary(mod2)
plot(mod2)

# mod3. Transforming the model to satisfy Normal Probability plot 

mod3 <- lm(log(price) ~ bathrooms + sqft_living + sqft_lot + floors + waterfront + view + condition + grade + zipcode, data = train)
summary(mod3)
plot(mod3)


# Predicting test data on mod3
pred_log_price <- predict(mod3, test) # Because we used log Transformation for price, this will give predicted values of log of price
pred_price <- exp(pred_log_price) # Now exponentiate to get predicted price
actual_predicted_price_df <- data.frame(obs=test$price, pred=pred_price)
actual_predicted_price_df
defaultSummary(actual_predicted_price_df)
head(actual_predicted_price_df)



           


